#!/bin/bash

# Install Homebrew
if [ ! "$(which brew)" ]; then
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

CASKS=$(brew cask ls)
function has_cask () {
  test ! -z "$(echo $CASKS | grep -o $1)"
}

FORMULAE=$(brew ls)
function has_formula () {
  test ! -z "$(echo $FORMULAE | grep -o $1)"
}

function brew_install () {
  for formula in "$@"; do
    printf "Installing $formula..."
    has_formula "$formula" || brew install $formula
    echo ✔︎
  done
}

function cask_install () {
  for cask in "$@"; do
    printf "Installing cask $cask..."
    has_cask "$cask" || {
      brew cask install $cask
      APP=`brew cask info $cask | grep \(App\) | cut -f1 -d'.'`
      test ! -z "$APP" && xattr -dr com.apple.quarantine "/Applications/$APP.app"
    }
    echo ✔︎
  done
}

# Sudo without password
sudo sed -i '' 's/^%admin.*/%admin          ALL = (ALL) NOPASSWD:ALL/' /etc/sudoers

# Select the correct Xcode
sudo xcode-select -switch /Applications/Xcode.app/

# Programming languages
brew_install ruby python python@2 node erlang elixir rust crystal
cask_install dotnet-sdk
has_formula php || brew install php --env=std --build-from-source
brew_install composer
test -f ~/.composer/vendor/bin/laravel || composer global require laravel/installer
test -f ~/.composer/vendor/bin/valet || composer global require laravel/valet

# PostgreSQL
has_formula postgresql || {
  brew_install postgresql 
  createuser -s postgres
  brew services start postgresql
}

# Vim & MacVim
has_formula vim || brew install vim --env=std --with-override-system-vi --build-from-source
has_formula macvim || {
  brew install macvim --env=std --build-from-source
  dir=$(brew info macvim | grep /usr/local | cut -f 1 -d' ')
  rm -rf /Applications.MacVim.app
  mv $dir/MacVim.app /Applications
}

# Fonts
brew tap homebrew/cask-fonts
cask_install font-hasklig font-fira-code font-inconsolata \
  font-roboto-mono font-source-code-pro font-bitstream-vera \
  font-cousine font-space-mono \
  font-anonymice-powerline font-inconsolata-for-powerline font-inconsolata-g-for-powerline \
  font-inconsolata-dz-for-powerline font-monofur-for-powerline \
  font-noto-mono-for-powerline font-consolas-for-powerline font-roboto-mono-for-powerline \
  font-dejavu-sans-mono-for-powerline font-liberation-mono-for-powerline font-menlo-for-powerline \
  font-source-code-pro-for-powerline font-droid-sans-mono-for-powerline \
  font-ubuntu-mono-derivative-powerline font-fira-mono-for-powerline font-meslo-for-powerline

# Basic tooling
brew_install wget curl tree git gnupg

# iTerm2
has_cask iterm2 || {
  cask_install iterm2
  rm -f ~/Library/Preferences/com.googlecode.iterm2.plist
  cp ~/.iterm2 ~/Library/Preferences/com.googlecode.iterm2.plist
}

# Productivity (or not)
cask_install google-chrome whatsapp spotify \
  alfred sync dropbox skype skype-for-business \
  keybase electrum

# Programming
cask_install tunnelblick sequel-pro tableplus rowanj-gitx

# VSCode
cask_install visual-studio-code
mkdir -p ~/Library/Application\ Support/Code/User
for file in settings.json keybindings.json snippets; do
  rm -rf ~/Library/Application\ Support/Code/User/$file
  ln -s ~/.vscode/$file ~/Library/Application\ Support/Code/User
done
code --install-extension azemoh.one-monokai \
     --install-extension jakebecker.elixir-ls \
     --install-extension esbenp.prettier-vscode \
     --install-extension vscode.vim \
     --install-extension rebornix.toggle \
     --install-extension lencerf.beancount

# Oh-my-zsh
brew_install zsh
if [ ! -d ~/.oh-my-zsh ]; then
  SHELL=zsh sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  CURRENT_SHELL=$(dscl . -read /Users/$USER UserShell | cut -f 2 -d' ')
  sudo dscl . -change /Users/$USER UserShell $CURRENT_SHELL /usr/local/bin/zsh
fi

# Zsh plugins
for plugin in zsh-syntax-highlighting zsh-autosuggestions; do
  dir=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/$plugin
  test -d $dir || git clone https://github.com/zsh-users/$plugin.git $dir
done

# OS/X settings
~/bin/osx
